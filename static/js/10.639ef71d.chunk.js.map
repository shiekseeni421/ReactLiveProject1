{"version":3,"sources":["service/toast.js","component/SignIn/SigninEl.js"],"names":["Toast","type","message","time","Array","isArray","item","NotificationManager","SigninEl","history","useHistory","useState","showPassword","setShowPassword","customerID","setCustomerID","email","setEmail","password","setPassword","className","sx","width","outline","background","m","borderRadius","variant","onChange","e","target","value","htmlFor","id","endAdornment","position","label","console","log","aria-label","onClick","show","edge","push","style","color"],"mappings":"qMAGaA,EAAQ,SAAC,GAAkD,IAAD,IAA/CC,YAA+C,MAAxC,UAAwC,EAA7BC,EAA6B,EAA7BA,QAA6B,IAApBC,YAAoB,MAAb,OAAa,EACrE,GAAIC,MAAMC,QAAQH,GAAU,CAC1B,IAAII,EADsB,gBAGbJ,GAHa,IAG1B,2BAAKI,EAAiB,QACpBC,sBAAoBN,GAAMK,EAAKJ,QAAS,GAAIC,GAJpB,oCAO1BI,sBAAoBN,GAAMC,EAAS,GAAIC,K,sLC8H5BK,UA5Hf,WACE,IAAMC,EAAUC,cAChB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAGA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAWA,OACE,yBAAKC,UAAU,YACb,wBAAIA,UAAU,iBAAd,iBACA,uBAAGA,UAAU,cAAb,wDACuD,6BAAO,IAC5D,wDAEF,6BACE,kBAAC,IAAD,CACEC,GAAI,CACFC,MAAO,QACPC,QAAS,OACTC,WAAY,UACZC,EAAG,EACHC,aAAc,OAEhBC,QAAQ,WACRC,SAAU,SAACC,GACTd,EAAcc,EAAEC,OAAOC,SAGzB,kBAAC,IAAD,CAAYC,QAAQ,+BAApB,eAGA,kBAAC,IAAD,CACEC,GAAG,8BACHhC,KAAM,OACNiC,aAAc,kBAAC,IAAD,CAAgBC,SAAS,QACvCC,MAAM,iBAIZ,6BACE,kBAAC,IAAD,CACEf,GAAI,CACFC,MAAO,QACPE,WAAY,UACZC,EAAG,EACHC,aAAc,OAEhBC,QAAQ,WACRC,SAAU,SAACC,GACTZ,EAASY,EAAEC,OAAOC,SAGpB,kBAAC,IAAD,CAAYC,QAAQ,+BAApB,SACA,kBAAC,IAAD,CACEC,GAAG,8BACHhC,KAAM,QACNiC,aAAc,kBAAC,IAAD,CAAgBC,SAAS,QACvCC,MAAM,eAIZ,6BACE,kBAAC,IAAD,CACEf,GAAI,CACFC,MAAO,QACPC,QAAS,OACTC,WAAY,UACZC,EAAG,EACHC,aAAc,OAEhBC,QAAQ,WACRC,SAAU,SAACC,GACTV,EAAYU,EAAEC,OAAOC,SAGvB,kBAAC,IAAD,CAAYC,QAAQ,+BAApB,YAGA,kBAAC,IAAD,CACEC,GAAG,8BACHhC,KAAMW,EAAe,OAAS,WAC9BsB,aACE,kBAAC,IAAD,CACEC,SAAS,MACTP,SAAU,SAACC,GACTQ,QAAQC,IAAI,QAGd,kBAAC,IAAD,CACEC,aAAW,6BACXC,QAlGgB,kBAAM3B,GAAgB,SAAC4B,GAAD,OAAWA,MAmGjDC,KAAK,OAEJ9B,EAAe,kBAAC,IAAD,MAAoB,kBAAC,IAAD,QAI1CwB,MAAM,eAIZ,uBAAGhB,UAAU,mBAAb,oBACA,kBAAC,IAAD,CAAQA,UAAU,gBAAgBoB,QAxGnB,WACH,KAAVxB,GAA+B,KAAfF,GAAkC,KAAbI,GACvClB,gBAAM,CAAEC,KAAM,UAAWC,QAAS,uBAClCO,EAAQkC,KAAR,yBAEA3C,gBAAM,CAAEC,KAAM,QAASC,QAAS,8BAmGhC,WAGA,uBAAGkB,UAAU,eAAb,8BACyB,IACvB,0BAAMwB,MAAO,CAAEC,MAAO,YAAtB","file":"static/js/10.639ef71d.chunk.js","sourcesContent":["import { NotificationManager } from \"react-notifications\";\n\n//Toast\nexport const Toast = ({ type = \"success\", message, time = \"4000\" }) => {\n  if (Array.isArray(message)) {\n    let item;\n\n    for (item of message) {\n      NotificationManager[type](item.message, \"\", time);\n    }\n  } else {\n    NotificationManager[type](message, \"\", time);\n  }\n};","import React, { useState } from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./index.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nfunction SigninEl() {\r\n  const history = useHistory();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const [customerID, setCustomerID] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const submitData = () => {\r\n    if (email !== \"\" && customerID !== \"\" && password !== \"\") {\r\n      Toast({ type: \"success\", message: \"Login successfully\" });\r\n      history.push(`/live/livestreampage`);\r\n    } else {\r\n      Toast({ type: \"error\", message: \"please enter all values\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-el\">\r\n      <h1 className=\"login-heading\">Hello, Again!</h1>\r\n      <p className=\"login-text\">\r\n        Lorem Ipsum is simply dummy text of the printing and <br />{\" \"}\r\n        <span>typesetting industry.</span>\r\n      </p>\r\n      <div>\r\n        <FormControl\r\n          sx={{\r\n            width: \"320px\",\r\n            outline: \"none\",\r\n            background: \"#fafafa\",\r\n            m: 1,\r\n            borderRadius: \"8px\",\r\n          }}\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setCustomerID(e.target.value);\r\n          }}\r\n        >\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">\r\n            Customer ID\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-password\"\r\n            type={\"text\"}\r\n            endAdornment={<InputAdornment position=\"end\"></InputAdornment>}\r\n            label=\"Cusomer ID\"\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl\r\n          sx={{\r\n            width: \"320px\",\r\n            background: \"#fafafa\",\r\n            m: 1,\r\n            borderRadius: \"8px\",\r\n          }}\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        >\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">Email</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-password\"\r\n            type={\"email\"}\r\n            endAdornment={<InputAdornment position=\"end\"></InputAdornment>}\r\n            label=\"Password\"\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl\r\n          sx={{\r\n            width: \"320px\",\r\n            outline: \"none\",\r\n            background: \"#fafafa\",\r\n            m: 1,\r\n            borderRadius: \"8px\",\r\n          }}\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        >\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">\r\n            Password\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            endAdornment={\r\n              <InputAdornment\r\n                position=\"end\"\r\n                onChange={(e) => {\r\n                  console.log(\"hi\");\r\n                }}\r\n              >\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            label=\"Password\"\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <p className=\"forgot-password\">Forgot Password?</p>\r\n      <Button className=\"signIn-button\" onClick={submitData}>\r\n        Sign In\r\n      </Button>\r\n      <p className=\"register-el\">\r\n        Donâ€™t have an account?{\" \"}\r\n        <span style={{ color: \"#25a0da\" }}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SigninEl;\r\n"],"sourceRoot":""}